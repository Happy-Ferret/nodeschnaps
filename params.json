{"name":"Nodeschnaps","tagline":"A NodeJS compatibility layer for Rhino","body":"[![Nodeschnaps](https://raw.githubusercontent.com/killmag10/nodeschnaps/master/docs/assets/teaser.png)]()\r\n\r\nNodeschnaps is a [node.js](http://nodejs.org) compatibility layer for Rhino.\r\nThe main inspiration is to run ETL transformation with the same code we use\r\nin node.js to save development time.\r\n\r\n## Features\r\n\r\nWe work hard to implement the full API of node.js. So you could load\r\nNodeschnaps into your Rhino environment and use your node.js code without\r\nrestrictions. Take a look at the current\r\n[development status](https://github.com/killmag10/nodeschnaps/blob/master/docs/status.md)\r\nto get a overview of what we done so far.\r\n\r\n## Supported Platforms\r\n\r\nWe plan to support the following platform:\r\n\r\n* Rhino JS\r\n* Pentaho Data-Integration (Kettle)\r\n* Nashorn (later)\r\n\r\n### Bootstrap\r\n\r\n#### Rhino JS\r\n\r\n```js\r\nload('../loader.js');\r\n\r\nNodeJS(...);\r\n```\r\n\r\n#### Pentaho Data-Integration (Kettle)\r\n\r\nLoad on Job (JavaScript):\r\n\r\n```js\r\nnew Function(\r\n    org.apache.commons.io.FileUtils.readFileToString(\r\n      new java.io.File(parent_job.getVariable('NODESCHNAPS_LOADER_FILE'))\r\n    )\r\n)();\r\n\r\nNodeJS(...);\r\n```\r\n\r\nLoad on Transformation (Modified Java Script Value):\r\n\r\n```js\r\nLoadScriptFile(getEnvironmentVar('NODESCHNAPS_LOADER_FILE'));\r\n\r\nNodeJS(...);\r\n```\r\n\r\n#### Start main loop\r\nAs callback:\r\n\r\n```js\r\nNodeJS(function(){\r\n    // Your code here ...\r\n});\r\n```\r\n\r\nOr before:\r\n\r\n```js\r\n// Your code here ...\r\n\r\nNodeJS();\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}